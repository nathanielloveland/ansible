---
  - name: install python-apt
    raw: "apt-get install -y python-apt"

  - name: update apt cache
    apt: update-cache=yes

  - name: installing base packages
    apt: pkg={{ item }} state=present
    with_items:
      - bzip2
      - curl
      - dbus
      - gawk
      - git
      - heirloom-mailx
      - imagemagick
      - iotop
      - jed
      - libaio1
      - libcache-perl
      - libdbi-perl
      - libicu44
      - libio-multiplex-perl
      - libipc-sharelite-perl
      - libnet-cidr-perl
      - libnet-snmp-perl
      - libopts25
      - netcat-openbsd
      - nload
      - ntp
      - python-configobj
      - python-psutil
      - screen
      - ssh
      - sudo
      - tcpdump
      - unzip
      - vim
      - zip
      - unifont
      - xfonts-unifont
      - ttf-ancient-fonts
      - ttf-arphic-bkai00mp
      - ttf-arphic-bsmi00lp
      - ttf-arphic-gbsn00lp
      - ttf-arphic-gkai00mp
      - ttf-arphic-ukai
      - ttf-arphic-uming
      - ttf-bitstream-vera
      - ttf-bpg-georgian-fonts
      - ttf-dejavu
      - ttf-freefont
      - ttf-bengali-fonts
      - ttf-devanagari-fonts
      - ttf-gujarati-fonts
      - ttf-indic-fonts
      - ttf-kannada-fonts
      - ttf-malayalam-fonts
      - ttf-oriya-fonts
      - ttf-punjabi-fonts
      - ttf-tamil-fonts
      - ttf-telugu-fonts
      - ttf-kiloji
      - ttf-kochi-gothic
      - ttf-kochi-mincho
      - ttf-manchufont
      - ttf-sazanami-gothic
      - ttf-sazanami-mincho
      - ttf-sil-yi
      - ttf-takao
      - ttf-umefont
      - ttf-unfonts-core
      - ttf-unfonts-extra
      - ttf-unifont
    when_string: '"squeeze" in "${ansible_lsb.codename}"'

  - name: installing base packages
    apt: pkg={{ item }} state=present
    with_items:
      - bzip2
      - curl
      - dbus
      - gawk
      - git
      - gdisk
      - heirloom-mailx
      - imagemagick
      - iotop
      - jed
      - libaio1
      - libcache-perl
      - libdbi-perl
      - libicu48
      - libio-multiplex-perl
      - libipc-sharelite-perl
      - libnet-cidr-perl
      - libnet-snmp-perl
      - libopts25
      - netcat-openbsd
      - nload
      - ntp
      - python-configobj
      - python-psutil
      - screen
      - ssh
      - sudo
      - tcpdump
      - unzip
      - vim
      - zip
      - unifont
      - xfonts-unifont
      - ttf-ancient-fonts
      - ttf-arphic-bkai00mp
      - ttf-arphic-bsmi00lp
      - ttf-arphic-gbsn00lp
      - ttf-arphic-gkai00mp
      - ttf-arphic-ukai
      - ttf-arphic-uming
      - ttf-bitstream-vera
      - ttf-bpg-georgian-fonts
      - ttf-dejavu
      - ttf-freefont
      - ttf-bengali-fonts
      - ttf-devanagari-fonts
      - ttf-gujarati-fonts
      - ttf-indic-fonts
      - ttf-kannada-fonts
      - ttf-malayalam-fonts
      - ttf-oriya-fonts
      - ttf-punjabi-fonts
      - ttf-tamil-fonts
      - ttf-telugu-fonts
      - ttf-kiloji
      - ttf-kochi-gothic
      - ttf-kochi-mincho
      - ttf-manchufont
      - ttf-sazanami-gothic
      - ttf-sazanami-mincho
      - ttf-sil-yi
      - ttf-takao
      - ttf-umefont
      - ttf-unfonts-core
      - ttf-unfonts-extra
      - ttf-unifont
    when_string: '"wheezy" in "${ansible_lsb.codename}"'

  - name: send custom kernel to remote server
    get_url: url=http://bastion.symmetrics.local/base/linux-{{ kernel_version }} dest=/boot/linux-{{ kernel_version }} mode=0644 force=yes

  - name: send custom kernel initrd to remote server
    get_url: url=http://bastion.symmetrics.local/base/initrd.img-{{ kernel_version }} dest=/boot/initrd.img-{{ kernel_version }} mode=0644 force=yes

  - name: send custom kernel modules to remote server
    get_url: url=http://bastion.symmetrics.local/base/linux-{{ kernel_version }}-modules.tar.bz2 dest=/tmp/linux-{{ kernel_version }}-modules.tar.bz2 mode=0644 force=yes

  - name: send grub.cfg to remote server
    template: src=grub.cfg.j2 dest=/boot/grub/grub.cfg mode=0644

  - name: send zfs-util package to remote server
    get_url: url=http://bastion.symmetrics.local/base/zfs_0.6.1-2_amd64.deb.{{ ansible_lsb.codename }} dest=/tmp/zfs_0.6.1-2_amd64.deb mode=0644 force=yes

  - name: send gptfdisk_0.8.6-1_amd64.deb package to remote server
    get_url: url=http://bastion.symmetrics.local/base/gptfdisk_0.8.6-1_amd64.deb dest=/tmp/gptfdisk_0.8.6-1_amd64.deb mode=0644 force=yes
    when_string: '"squeeze" in "${ansible_lsb.codename}"'

  - name: extract kernel moduless
    command: tar -jxf /tmp/linux-{{ kernel_version }}-modules.tar.bz2 -C /lib/modules chdir=/lib/modules creates=/lib/modules/{{ kernel_version }}

  - name: install zfs-util package
    command: dpkg -i /tmp/zfs_0.6.1-2_amd64.deb creates=/etc/init.d/zfs 

  - name: install gptfdisk package
    command: dpkg -i /tmp/gptfdisk_0.8.6-1_amd64.deb creates=/usr/sbin/sgdisk
    when_string: '"squeeze" in "${ansible_lsb.codename}"'

  - name: reboot remote node to pick up new kernel
    command: shutdown -r now

  - name: change hostname
    lineinfile: dest=/etc/hostname regexp=^.* line={{ name }}

  - name: change 127.0.1.1 to match hostname
    lineinfile: dest=/etc/hosts regexp=^127\.0\.1\.1 line="127.0.1.1 {{ name }}"

  - name: wait for machine to come back
    local_action: wait_for host={{ inventory_hostname }} port=22 delay=15 timeout=300

  - name: ensure /indicee exists
    file: path=/indicee state=directory

  - name: create lvm slice for zfs pool
    lvol: vg={{ vg }} lv=zfs size={{ zfs_size }}

  - name: create zfs pool on lvm
    command: zpool create -f zfs /dev/mapper/{{ vg }}-zfs creates=/zfs

  - name: create /indicee/log file system with compression
    zfs: name=zfs/log compression=on atime=off mountpoint=/indicee/log state=present

  - name: ensure zfs added to startup
    command: update-rc.d zfs defaults

  - name: create logical volume for staging db
    lvol: vg={{ vg }} lv={{ staging_lv }} size={{ staging_mount_size }}

  - name: check if the staging db file system is mounted
    shell: grep {{ staging_lv }} /proc/mounts
    register: filesystem
    ignore_errors: True

  - name: format staging db lv as ext4
    shell: mkfs.ext4 -L {{ staging_mount }} -m 0 /dev/mapper/{{ vg }}-{{ staging_lv }}
    when_failed: $filesystem

  - name: ensure /indicee/{{ staging_mount }} exists
    file: path=/indicee/{{ staging_mount }} state=directory

  - name: mount staging db file system
    mount: name=/indicee/{{ staging_mount }} src='LABEL={{ staging_mount }}' fstype=ext4 opts='noatime' state=mounted
    when_failed: $filesystem

  - name: ensure /indicee/bin exists
    file: path=/indicee/bin state=directory
